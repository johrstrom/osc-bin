#!/bin/sh

function show_help(){
  echo "Helper script to run Open OnDemand Conainters."
  echo "ood-server [OPTIONS] [start|stop|restart]"
  echo ""
  echo "  -h|--help             show this message"
  echo "  -p|--port <port>      specify the port you want to bind to (8080 is the default)"
  echo "  -i|--img  <name>      specify the image you want to boot"
  echo "  -c|--ctr-name <name>  the name of the container (ood is the default)"
  echo "  -n|--network          bind to the hosts network stack (default is false)"
}

IMG="ood:src-user"

CTR_NAME="ood"
PORT="8080"

for arg in "$@"
do
  case $arg in
    -h|--help)
    show_help
    exit 0
    ;;

    -i|--image)
    IMG=$2
    shift
    shift
    ;;

    -p|--port)
    PORT=$2
    shift
    shift
    ;;

    -n|--network)
    HOST_NETWORK=true
    shift
    ;;

    -c|--ctr-name)
    CTR_NAME=$2
    shift
    shift
    ;;

    start)
    START=true
    shift
    ;;

    stop)
    STOP=true
    shift
    ;;

    restart)
    RESTART=true
    shift
    ;;
esac
done

if [ -d "$HOME/ondemand/dev" ]; then
  OOD_APP_DEV_DIR="$HOME/ondemand/dev"
elif [ -z $OOD_APP_DEV_DIR ]; then
  OOD_APP_DEV_DIR=$HOME
fi

if [[ "$IMG" == "ood:src-user" ]] || [[ "$IMG" == "ood:ubuntu" ]] || [[ "$IMG" == "ood:debian" ]]; then
  ARGS="${ARGS} --entrypoint=/usr/local/bin/launch-httpd"

  # export a debian flag so the  ood-server.env file can mount the correct files
  if [[ "$IMG" == "ood:debian" ]] || [[ "$IMG" == "ood:ubuntu" ]]; then
    export CTR_ID="debian"
  fi
fi

# load extra stuff if you want
EXTRAS_FILE="$HOME/.config/ondemand/ood-server.env"
if [ -f "$EXTRAS_FILE" ]; then
  . $EXTRAS_FILE
fi

ARGS="${ARGS} --rm=true --security-opt label=disable -v $OOD_APP_DEV_DIR:$HOME/ondemand/dev"
ARGS="${ARGS} --userns=keep-id ${EXTRA_ARGS} -p ${PORT}:8080 --name=$CTR_NAME"
# need sys_ptrace cuz passenger needs to read /proc/N/environ for all N for whatever reason
ARGS="${ARGS} --cap-add=sys_ptrace"

if [ $HOST_NETWORK ]; then
  ARGS="${ARGS} --network=host"
fi

function start_server() {
  LOG="/tmp/ood-container-$PORT.out"
  tries=0

  while [ $tries -lt 3 ]; do
    podman run ${ARGS} ${IMG} > $LOG 2>&1 &
    if ! podman exec "$CTR_NAME" ls >/dev/null 2>&1; then
       sleep 1
       tries=$((tries+1))
    else
       tries=100
    fi
  done
}

function stop_server() {
  podman kill "$CTR_NAME" >/dev/null 2>&1
  return $?
}

if [ "$START" ]; then
  start_server
elif [ "$STOP" ]; then
  stop_server
elif [ "$RESTART" ]; then
  stop_server
  start_server
else
  echo "you must specify one of [stop,start,restart]"
  exit 1
fi


  
